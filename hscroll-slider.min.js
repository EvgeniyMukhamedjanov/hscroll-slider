const dragThreshold=5,attributes={areaSelector:"area-selector",slideSelector:"slide-selector",prevButtonSelector:"prev-btn-selector",nextButtonSelector:"next-btn-selector",scrollable:"scrollable",scrollableLeft:"scrollable-left",scrollableRight:"scrollable-right",scrolling:"scrolling"},cssVars={thumbWidth:"hscroll-slider-thumb-width",thumbShift:"hscroll-slider-thumb-shift",scrollProgress:"hscroll-slider-scroll-progress"},defaultSelectors={area:"[data-hscroll-slider-area]",slide:"[data-hscroll-slider-slide]",prevButton:"[data-hscroll-slider-button-prev]",nextButton:"[data-hscroll-slider-button-next]"};customElements.get("hscroll-slider")||customElements.define("hscroll-slider",class extends HTMLElement{constructor(){super(),this._props={scrollTimer:void 0}}connectedCallback(){this.init(),window.addEventListener("resize",this.render.bind(this)),this.render()}init(){this.initScrollableArea(),this.initSlides(),this.initButtons()}initScrollableArea(){let t=null;const s=this.getAttribute(attributes.areaSelector)||defaultSelectors.area;s&&(t=this.querySelector(s)),t!==this._props.$scrollableArea&&(t&&(t.addEventListener("mousedown",(s=>{this._props.isMouseDown=!0,this._props.startX=s.pageX-t.offsetLeft,this._props.scrollLeft=t.scrollLeft})),t.addEventListener("mouseleave",(()=>{this._props.isMouseDown=!1})),t.addEventListener("mouseup",(()=>{this._props.isMouseDown=!1})),t.addEventListener("mousemove",(s=>{if(!this._props.isMouseDown)return;s.preventDefault();const e=s.pageX-t.offsetLeft-this._props.startX;Math.abs(e)>5&&(this._props.isDragged=!0),t.scrollLeft=this._props.scrollLeft-e})),t.addEventListener("click",(t=>{this._props.isDragged&&t.preventDefault(),this._props.isDragged=!1})),t.addEventListener("scroll",(()=>{this.render(),this.setAttribute(attributes.scrolling,""),void 0!==this.scrollTimer&&clearTimeout(this.scrollTimer),this.scrollTimer=setTimeout((()=>{this.removeAttribute(attributes.scrolling,"")}),150)}))),this._props={...this._props,isMouseDown:!1,isDragged:!1,startX:void 0,scrollLeft:void 0,$scrollableArea:t})}initSlides(){let t=[];const s=this.getAttribute(attributes.slideSelector)||defaultSelectors.slide;s&&this._props.$scrollableArea&&(t=[...this._props.$scrollableArea.querySelectorAll(s)]),this._props.$slides=t}initButtons(){"$buttons"in this._props||(this._props.$buttons=[]);const t=this.getAttribute(attributes.prevButtonSelector)||defaultSelectors.prevButton;t&&this.querySelectorAll(t).forEach((t=>{this._props.$buttons.includes(t)||(t.addEventListener("click",(()=>{this.goToPrevSlide()})),this._props.$buttons.push(t))}));const s=this.getAttribute(attributes.nextButtonSelector)||defaultSelectors.nextButton;s&&this.querySelectorAll(s).forEach((t=>{this._props.$buttons.includes(t)||(t.addEventListener("click",(()=>{this.goToNextSlide()})),this._props.$buttons.push(t))}))}updateScrollingClass(t){this.scrollingClassElements.forEach((s=>{const e=s.getAttribute(scrollingClassAttr);e&&(t?s.classList.add(e):s.classList.remove(e))}))}goToPrevSlide(){if(this._props.$slides.length>0){let t=0;const s=this._props.$slides[0].offsetLeft,e=this._props.$scrollableArea.scrollLeft,r=[...this._props.$slides].reverse().find((t=>t.offsetLeft<e+s));r&&(t=r.offsetLeft-s),t<0&&(t=0),this._props.$scrollableArea.scrollTo({top:0,left:t,behavior:"smooth"})}}goToNextSlide(){if(this._props.$slides.length>0){const t=this._props.$scrollableArea.scrollWidth-this._props.$scrollableArea.clientWidth;let s=t;const e=this._props.$slides[0].offsetLeft,r=this._props.$scrollableArea.scrollLeft,l=this._props.$slides.find((t=>t.offsetLeft>r+e+1));l&&(s=l.offsetLeft-e),s>t&&(s=t),this._props.$scrollableArea.scrollTo({top:0,left:s,behavior:"smooth"})}}render(){this.renderCssVars(),this.renderAttributes()}renderCssVars(){if(!this._props.$scrollableArea)return;let t=100,s=0,e=0;const r=this._props.$scrollableArea.clientWidth,l=this._props.$scrollableArea.scrollWidth,o=this._props.$scrollableArea.scrollLeft;l>r&&(t=100*r/l,s=100*o/l,e=100*o/(l-r)),this.style.setProperty(`--${cssVars.thumbWidth}`,`${t}%`),this.style.setProperty(`--${cssVars.thumbShift}`,`${s}%`),this.style.setProperty(`--${cssVars.scrollProgress}`,`${e}%`)}renderAttributes(){const t=this._props.$scrollableArea;if(!t)return;t.scrollWidth>t.clientWidth?(this.setAttribute(attributes.scrollable,""),t.scrollLeft>0?this.setAttribute(attributes.scrollableLeft,""):this.removeAttribute(attributes.scrollableLeft),t.scrollLeft<t.scrollWidth-t.clientWidth?this.setAttribute(attributes.scrollableRight,""):this.removeAttribute(attributes.scrollableRight)):(this.removeAttribute(attributes.scrollable),this.removeAttribute(attributes.scrollableLeft),this.removeAttribute(attributes.scrollableRight))}});
