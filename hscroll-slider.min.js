const containerAttr="data-horizontal-carousel-container",thumbAttr="data-horizontal-carousel-thumb",prevBtnAttr="data-horizontal-carousel-prev",nextBtnAttr="data-horizontal-carousel-next",scrollableClassAttr="data-horizontal-carousel-scrollable",scrollingClassAttr="data-horizontal-carousel-scrolling",carouselItemAttr="data-horizontal-carousel-item";class HScrollSlider extends HTMLElement{constructor(){super(),this.containerElement=this.querySelector(`[${containerAttr}]`),this.containerElement&&(this.thumbElement=this.querySelector(`[${thumbAttr}]`),this.scrollableClassElements=this.querySelectorAll(`[${scrollableClassAttr}]`),this.scrollingClassElements=this.querySelectorAll(`[${scrollingClassAttr}]`),this.carouselItems=this.querySelectorAll(`[${carouselItemAttr}]`),this.prevButton=this.querySelector(`[${prevBtnAttr}]`),this.prevButton&&this.prevButton.addEventListener("click",this.goPrevSlide.bind(this)),this.nextButton=this.querySelector(`[${nextBtnAttr}]`),this.nextButton&&this.nextButton.addEventListener("click",this.goNextSlide.bind(this)),this.props={isDown:!1,wasMoved:!1,startX:void 0,scrollLeft:void 0,isAnimated:!1},this.containerElement.addEventListener("mousedown",(t=>{this.props.isDown=!0,this.props.startX=t.pageX-this.containerElement.offsetLeft,this.props.scrollLeft=this.containerElement.scrollLeft,this.updateScrollingClass()}).bind(this)),this.containerElement.addEventListener("mouseleave",(()=>{this.props.isDown=!1,this.updateScrollingClass()}).bind(this)),this.containerElement.addEventListener("mouseup",(()=>{this.props.isDown=!1,this.updateScrollingClass()}).bind(this)),this.containerElement.addEventListener("mousemove",(t=>{if(!this.props.isDown)return;if(this.props.isAnimated)return;t.preventDefault();const e=t.pageX-this.containerElement.offsetLeft-this.props.startX;Math.abs(e)>5&&(this.props.wasMoved=!0),this.containerElement.scrollLeft=this.props.scrollLeft-e}).bind(this)),this.containerElement.addEventListener("click",(t=>{this.props.wasMoved&&t.preventDefault(),this.props.wasMoved=!1}).bind(this)),this.scrollTimer=void 0,this.containerElement.addEventListener("scroll",(()=>{this.updateScroll(),this.updateScrollingClass(!0),void 0!==this.scrollTimer&&clearTimeout(this.scrollTimer),this.scrollTimer=setTimeout((()=>{this.updateScrollingClass(!1)}),150)}).bind(this)),window.addEventListener("resize",this.updateAll.bind(this)),new MutationObserver(((t,e)=>{this.carouselItems=this.querySelectorAll(`[${carouselItemAttr}]`),this.updateAll()})).observe(this.containerElement,{childList:!0,subtree:!0}),this.updateAll())}updateScroll(){this.updateScrollbar(),this.updateButtons()}updateAll(){this.updateScroll(),this.updateScrollableClass()}updateScrollbar(){if(!this.thumbElement)return;this.containerElement.scrollWidth,this.containerElement.clientWidth,this.containerElement.scrollLeft,this.containerElement.clientWidth;const t=this.containerElement.clientWidth,e=this.containerElement.scrollWidth,s=this.containerElement.scrollLeft;if(e<=t)return this.thumbElement.style.left=0,void(this.thumbElement.style.width=0);const i=100*t/e,l=(100-i)/100*(100*s/(e-t));this.thumbElement.style.left=`${l}%`,this.thumbElement.style.width=`${i}%`}updateButtons(){if(this.prevButton&&(0==this.containerElement.scrollLeft?this.prevButton.disabled=!0:this.prevButton.disabled=!1),this.nextButton){const t=this.containerElement.scrollWidth-this.containerElement.clientWidth-1;this.containerElement.scrollLeft<t?this.nextButton.disabled=!1:this.nextButton.disabled=!0}}updateScrollableClass(){const t=this.containerElement.scrollWidth>this.containerElement.clientWidth;this.scrollableClassElements.forEach((e=>{const s=e.getAttribute(scrollableClassAttr);s&&(t?e.classList.add(s):e.classList.remove(s))}))}updateScrollingClass(t){this.scrollingClassElements.forEach((e=>{const s=e.getAttribute(scrollingClassAttr);s&&(t?e.classList.add(s):e.classList.remove(s))}))}goPrevSlide(){if(this.carouselItems.length>0){const t=this.carouselItems[0].offsetLeft,e=this.containerElement.scrollLeft;let s=[...this.carouselItems].reverse().find((s=>s.offsetLeft<e+t)).offsetLeft-t;s<0&&(s=0),this.containerElement.scrollTo({top:0,left:s,behavior:"smooth"})}}goNextSlide(){if(this.carouselItems.length>0){const t=this.carouselItems[0].offsetLeft,e=this.containerElement.scrollLeft,s=this.containerElement.scrollWidth-this.containerElement.clientWidth;let i=[...this.carouselItems].find((s=>s.offsetLeft>e+t+1)).offsetLeft-t;i>s&&(i=s),this.containerElement.scrollTo({top:0,left:i,behavior:"smooth"})}}scrollTo(t){this.containerElement.scrollLeft!==t?this.props.isAnimated=!0:this.props.isAnimated=!1}}
